const Int_t nptBins = 60;
Double_t ptBds4Corr[nptBins+1] =
{
	0, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.0, //21
	1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, //10
	2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, //10
	3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, //10
	4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0  //10
};
//--------------------------------------------------------------------------------------------------------------
const Int_t  nMBins_ct0 = 106;
Double_t mBds4Corr_ct0[nMBins_ct0+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.055, 0.06, 0.07, 0.08, 0.09, 0.10, //11
	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //21
	0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.20, //10
	0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.30, //10
	0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.40, //10
	0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.50, //10
	0.52, 0.54, 0.56, 0.58, 0.60, 0.62, 0.64, 0.66, 0.68, 0.70, //10
	0.72, 0.74, 0.76, 0.78, 0.80, 0.82, 0.84, 0.86, 0.88, 0.90, //10
	0.95, 1.00, 1.01, 1.02, 1.03, 1.04, 1.06, 1.08, 1.10, 1.15, 1.20, 1.30, 1.40, 1.50, 1.60, 1.70, 1.80, 1.90, //13
	2.00, 2.10, 2.20, 2.30, 2.40, 2.50, 2.60, 2.70, 2.80, 2.90,//10
	3.00, 3.060, 3.085, 3.110,3.130,3.16, 3.31, 3.50//8
};
const Int_t  nMBins_ct1  = 106;
Double_t mBds4Corr_ct1[nMBins_ct1+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.055, 0.06, 0.07, 0.08, 0.09, 0.10, //11
	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //20
	0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.20, //10
	0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.30, //10
	0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.40, //10
	0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.50, //10
	0.52, 0.54, 0.56, 0.58, 0.60, 0.62, 0.64, 0.66, 0.68, 0.70, //10
	0.72, 0.74, 0.76, 0.78, 0.80, 0.82, 0.84, 0.86, 0.88, 0.90, //10
	0.95, 1.00, 1.01, 1.02, 1.03, 1.04, 1.06, 1.08, 1.10, 1.15, 1.20, 1.30, 1.40, 1.50, 1.60, 1.70, 1.80, 1.90, //13
	2.00, 2.10, 2.20, 2.30, 2.40, 2.50, 2.60, 2.70, 2.80, 2.90,//10
	3.00, 3.060, 3.085, 3.110,3.130,3.16, 3.31, 3.50//8

	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //20
	//0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.18, 0.22, 0.28, 0.34, //11
	//0.42, 0.52, 0.58, 0.65, 0.725, 0.750, 0.770, 0.780, 0.795, //8
	//0.820, 0.880, 0.990, 1.010, 1.030,
	//1.055, 1.225, 1.450, 1.800, 2.200,
	//2.800, 3.015, 
	//3.060, 3.085, 3.110,3.130,3.16,
	//3.31, 3.55
};

const Int_t  nMBins_ct2  = 106;
Double_t mBds4Corr_ct2[nMBins_ct2+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.055, 0.06, 0.07, 0.08, 0.09, 0.10, //11
	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //20
	0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.20, //10
	0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.30, //10
	0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.40, //10
	0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.50, //10
	0.52, 0.54, 0.56, 0.58, 0.60, 0.62, 0.64, 0.66, 0.68, 0.70, //10
	0.72, 0.74, 0.76, 0.78, 0.80, 0.82, 0.84, 0.86, 0.88, 0.90, //10
	0.95, 1.00, 1.01, 1.02, 1.03, 1.04, 1.06, 1.08, 1.10, 1.15, 1.20, 1.30, 1.40, 1.50, 1.60, 1.70, 1.80, 1.90, //13
	2.00, 2.10, 2.20, 2.30, 2.40, 2.50, 2.60, 2.70, 2.80, 2.90,//10
	3.00, 3.060, 3.085, 3.110,3.130,3.16, 3.31, 3.50//8

	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //20
	//0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.18, 0.22, 0.28, 0.34, //11
	//0.42, 0.52, 0.58, 0.65, 0.725, 0.750, 0.770, 0.780, 0.795, //8
	//0.820, 0.880, 0.990, 1.010, 1.030,
	//1.055, 1.225, 1.450, 1.800, 2.200,
	//2.800, 3.015, 
	//3.060, 3.085, 3.110,3.130,3.16,
	//3.31, 3.55
};

const Int_t  nMBins_ct3  = 106;
Double_t mBds4Corr_ct3[nMBins_ct3+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.055, 0.06, 0.07, 0.08, 0.09, 0.10, //11
	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //20
	0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.20, //10
	0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.30, //10
	0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38, 0.39, 0.40, //10
	0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.50, //10
	0.52, 0.54, 0.56, 0.58, 0.60, 0.62, 0.64, 0.66, 0.68, 0.70, //10
	0.72, 0.74, 0.76, 0.78, 0.80, 0.82, 0.84, 0.86, 0.88, 0.90, //10
	0.95, 1.00, 1.01, 1.02, 1.03, 1.04, 1.06, 1.08, 1.10, 1.15, 1.20, 1.30, 1.40, 1.50, 1.60, 1.70, 1.80, 1.90, //13
	2.00, 2.10, 2.20, 2.30, 2.40, 2.50, 2.60, 2.70, 2.80, 2.90,//10
	3.00, 3.060, 3.085, 3.110,3.130,3.16, 3.31, 3.50//8

	//0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.10, //20
	//0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.18, 0.22, 0.28, 0.34, //11
	//0.42, 0.52, 0.58, 0.65, 0.725, 0.750, 0.770, 0.780, 0.795, //8
	//0.820, 0.880, 0.990, 1.010, 1.030,
	//1.055, 1.225, 1.450, 1.800, 2.200,
	//2.800, 3.015, 
	//3.060, 3.085, 3.110,3.130,3.16,
	//3.31, 3.55
};

//binning for Physics excess yields
const Int_t  nMBins4Phys_ct0 = 30;
Double_t mBds4Phys_ct0[nMBins_ct0+1] =
{
	0.0, 0.055, 0.06, 0.07, 0.08, 0.09, 0.10,0.12, 0.20, 0.30, 0.45, 0.60, //12
	0.70,  0.76, 0.80, 0.86, 0.95, //5
	1.00,  1.040, 1.20, 1.50, 1.90, //7
	2.50, 2.80, 3.015, 3.060, 3.085, 3.110, 3.130, 3.16, 3.50  //9
	
	//used for 20201109
	//0.70,  0.76, 0.86, 0.95, //9
	//1.00,  1.10, 1.20, 1.50, 1.90, //5
	//2.50, 3.0, 3.50  //5
};





























//--------------------------------------------------------------------------------------------------------------
//binning for the physics in different pt bin in 0-80%
//--------------------------------------------------------------------------------------------------------------
const Int_t  nMBins_ipt0 = 43;
Double_t BinBounds_ipt0[nMBins_ipt0+1] = 
{
	0, 0.05, 0.06,  0.07, 0.08, 0.09, 0.10, //11
	0.12, 0.14, 0.16, 0.18, 0.20, 0.24, 0.28, 0.34, //8
	0.42, 0.48, 0.54, 0.60, 0.66, 0.725, 0.750, 0.770, 0.780, 0.795, //10
	0.820, 0.880, 0.990, 1.010, 1.030,//5
	1.055, 1.225, 1.450, 1.800, 2.200,//5
	2.800, 3.015, //2
	3.060, 3.085, 3.110,3.130,3.16,//5
	3.31, 3.55//2
};
const Int_t  nMBins_ipt1 = 47;
Double_t BinBounds_ipt1[nMBins_ipt1+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06,  0.07, 0.08, 0.09, 0.10, //11
	0.12, 0.14, 0.16, 0.18, 0.20, 0.24, 0.28, 0.34, //8
	0.42, 0.48, 0.54, 0.60, 0.66, 0.725, 0.750, 0.770, 0.780, 0.795, //10
	0.820, 0.880, 0.990, 1.010, 1.030,//5
	1.055, 1.225, 1.450, 1.800, 2.200,//5
	2.800, 3.015, //2
	3.060, 3.085, 3.110,3.130,3.16,//5
	3.31, 3.55//2

};
const Int_t  nMBins_ipt2 = 47;
Double_t BinBounds_ipt2[nMBins_ipt2+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06,  0.07, 0.08, 0.09, 0.10, //11
	0.12, 0.14, 0.16, 0.18, 0.20, 0.24, 0.28, 0.34, //8
	0.42, 0.48, 0.54, 0.60, 0.66, 0.725, 0.750, 0.770, 0.780, 0.795, //10
	0.820, 0.880, 0.990, 1.010, 1.030,//5
	1.055, 1.225, 1.450, 1.800, 2.200,//5
	2.800, 3.015, //2
	3.060, 3.085, 3.110,3.130,3.16,//5
	3.31, 3.55//2

};
const Int_t  nMBins_ipt3 = 47;
Double_t BinBounds_ipt3[nMBins_ipt3+1] = 
{
	0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06,  0.07, 0.08, 0.09, 0.10, //11
	0.12, 0.14, 0.16, 0.18, 0.20, 0.24, 0.28, 0.34, //8
	0.42, 0.48, 0.54, 0.60, 0.66, 0.725, 0.750, 0.770, 0.780, 0.795, //10
	0.820, 0.880, 0.990, 1.010, 1.030,//5
	1.055, 1.225, 1.450, 1.800, 2.200,//5
	2.800, 3.015, //2
	3.060, 3.085, 3.110,3.130,3.16,//5
	3.31, 3.55//2

};
const Int_t  nMBins_ipt4 = 47;
Double_t BinBounds_ipt4[nMBins_ipt4+1] = 
{
		0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06,  0.07, 0.08, 0.09, 0.10, //11
	0.12, 0.14, 0.16, 0.18, 0.20, 0.24, 0.28, 0.34, //8
	0.42, 0.48, 0.54, 0.60, 0.66, 0.725, 0.750, 0.770, 0.780, 0.795, //10
	0.820, 0.880, 0.990, 1.010, 1.030,//5
	1.055, 1.225, 1.450, 1.800, 2.200,//5
	2.800, 3.015, //2
	3.060, 3.085, 3.110,3.130,3.16,//5
	3.31, 3.55//2
};
const Int_t  nMBins_ipt5 = 47;
Double_t BinBounds_ipt5[nMBins_ipt5+1] = 
{
		0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06,  0.07, 0.08, 0.09, 0.10, //11
	0.12, 0.14, 0.16, 0.18, 0.20, 0.24, 0.28, 0.34, //8
	0.42, 0.48, 0.54, 0.60, 0.66, 0.725, 0.750, 0.770, 0.780, 0.795, //10
	0.820, 0.880, 0.990, 1.010, 1.030,//5
	1.055, 1.225, 1.450, 1.800, 2.200,//5
	2.800, 3.015, //2
	3.060, 3.085, 3.110,3.130,3.16,//5
	3.31, 3.55//2
};

//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
const double RhoMassWindow[2]   = {0.30, 0.77};
const double OmegaMassWindow[2] = {0.77, 0.82 };
const double PhiMassWindow[2]   = {0.99, 1.055};
const double IMRMassWindow[2]   = {1.1,  2.6  };
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
//this is the original bins from Cocktail
//Bins for Ratio of Data over Cocktail
const Int_t  nMBins_Ratio = 61;
Double_t BinBounds_Ratio[nMBins_Ratio+1] =
{
	0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.125,0.16,0.21,0.28,0.4,0.51,0.63,0.73,0.78,0.785,0.79,0.795,0.86,0.9,0.95,1,
	1.01,1.015,1.02,1.025,1.03,1.04,1.08,1.15,1.24,1.425,1.65,1.825,2,2.2,2.4,2.525,2.67,
	2.825,2.975,3,3.035,3.055,3.07, 3.075,3.09,3.095,3.1,3.12,3.135,3.21,3.3,3.4,3.55,3.60
};
//--------------------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------------------
//Considering the Statistical Uncertainty, have to rebin, instead of directly use the Cocktails
//Bins for Ratio of Data over Cocktail
const Int_t  nMBins_Ratio2 = 43;
Double_t BinBounds_Ratio2[nMBins_Ratio+1] =
{
	0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.11,0.125,0.16,0.21,0.28,0.4,0.51,//18
	0.63,0.73,0.78,0.785,0.79,0.795,0.86,1,//8
	1.01,1.015,1.02,1.025,1.03,//5
	1.08, 1.24, 1.425, 1.825, 2.4, 3.00, 3.055,3.07, 3.075,3.09,3.095,3.12,3.21//14 good enough
};
//--------------------------------------------------------------------------------------------------------------

//for the Mt Spectra
const Int_t nmtBins = 8;
Double_t mtBinBDs[nmtBins+1] =
{
	0, 0.10, 0.20, 0.4, 0.60, 0.80, 1.2, 1.8,  5.0
	//0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0, //20
	//1.1, 1.2, 1.3, 1.5, 1.8, 2.5, 3.5, 5.0
};

const Int_t nmtBins4Phys = 8;
Double_t mtBinBDs4Phys[nmtBins4Phys+1] =
{
	0, 0.10, 0.20, 0.4, 0.60, 0.80, 1.2, 1.8,  5.0
};





